$(document).ready(
    function() {
        $.datepicker.setDefaults(
                $.datepicker.regional[ "{{ app.request.getLocale() }}" ]
        );
        $('.js-datepicker').datepicker(
                {
                    dateFormat: 'dd/mm/yy'
                }
        );

        var fieldsetControl = null;
        var language = '';
        var formName = '';
        var intName = '';
        var intDescr = '';

        $('.rbins-name-cascade').on(
                'change',
                function () {
                    fieldsetControl = $($(this).data('target'));
                    language = $($(this).data('language-source')).val();
                    formName = $(this).parents('form').attr('name');
                    intName = $('#' + formName + '_international_name').val();
                    intDescr = $('#' + formName + '_international_description').val();

                    switch ($(this).val()) {
                        case '1':
                            fieldsetControl.prop('disabled', false);
                            $('#' + formName + '_name_' + language).val(intName).prop('disabled', true);
                            $('#' + formName + '_description_' + language).val(intDescr).prop('disabled', true);
                            fieldsetControl.find('input').not('#' + formName + '_name_' + language).prop('disabled', false);
                            fieldsetControl.find('textarea').not('#' + formName + '_description_' + language).prop('disabled', false);
                            break;
                        case '2':
                            fieldsetControl.prop('disabled', true);
                            fieldsetControl.find('input').val(intName);
                            fieldsetControl.find('textarea').val(intDescr);
                            break;
                        default:
                            fieldsetControl.prop('disabled', false);
                            fieldsetControl.find('input').prop('disabled', false);
                            fieldsetControl.find('textarea').prop('disabled', false);
                    }
                }
        );

        $('.rbins-language-source, .rbins-int-name, .rbins-int-descr').on(
                'change',
                function () {
                    $($(this).data('cascade-field-class')).trigger('change');
                }
        );

        $('.rbins-name-cascade').trigger('change');

        CKEDITOR.on(
                'instanceReady',
                function (event) {
                    var editor = event.editor;
                    switch ($('.rbins-name-cascade').val()) {
                        case '1':
                            if(
                                    editor.name == (formName + '_description_' + language)
                            ){
                                editor.setReadOnly(true);
                            }
                            else {
                                editor.setReadOnly(false);
                            }
                            break;
                        case '2':
                            if(
                                    [
                                        formName + '_description_en',formName + '_description_fr',formName + '_description_nl'
                                    ].indexOf(editor.name) >= 0
                            ){
                                editor.setReadOnly(true);
                            }
                            break;
                        default:
                            if(
                                    [
                                        formName + '_description_en',formName + '_description_fr',formName + '_description_nl'
                                    ].indexOf(editor.name) >= 0
                            ){
                                editor.setReadOnly(false);
                            }
                    }
                }
        );

    }
);
